from __future__ import annotations

import asyncio
import logging
import os
from typing import Sequence

from telegram.ext import Application, CommandHandler, ContextTypes
from telegram import Update

# –•–µ–Ω–¥–ª–µ—Ä–∏
from handlers.myvpn import cmd_myvpn

# –ë–î/—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –¥–ª—è /start (trial + —Å—Ç–∞—Ç—É—Å)
from db.session_async import get_session
from db.repo import get_or_create_user, grant_trial_if_needed, is_active

# –Ø–∫—â–æ —î –≤–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä WireGuard ‚Äî –º–æ–∂–Ω–∞ –æ–¥—Ä–∞–∑—É –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ peer –ø—Ä–∏ trial/–æ–ø–ª–∞—Ç—ñ
# from services.wg_manager import ensure_peer_for_user, get_client_config_qr  # –ø—Ä–∏–∫–ª–∞–¥


# -----------------------
# –õ–æ–≥—É–≤–∞–Ω–Ω—è
# -----------------------
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s %(levelname)s [%(name)s] %(message)s"
)
log = logging.getLogger("vpn-bot")


# -----------------------
# –ö–æ–º–∞–Ω–¥–∏
# -----------------------
async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /start:
    - —Ä–µ—î—Å—Ç—Ä—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞,
    - —è–∫—â–æ —Ü–µ –ø–µ—Ä—à–∏–π —Å—Ç–∞—Ä—Ç ‚Äî –¥–∞—î trial 7 –¥–Ω—ñ–≤,
    - –ø–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç—É—Å —ñ –¥–∞—Ç—É –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è,
    - (–æ–ø—Ü—ñ–π–Ω–æ) –æ–¥—Ä–∞–∑—É –≥–µ–Ω–µ—Ä—É—î/–≤–∏–¥–∞—î WireGuard-–∫–æ–Ω—Ñ—ñ–≥.
    """
    tg = update.effective_user
    chat = update.effective_chat
    if not chat or not tg:
        return

    async with await get_session() as session:
        user = await get_or_create_user(session, telegram_id=tg.id, username=tg.username)
        trial = await grant_trial_if_needed(session, user.id, days=7)
        await session.commit()

        active, expires_at = await is_active(session, user.id)

    if trial:
        text = (
            "üéâ –í—ñ—Ç–∞—é! –¢–≤—ñ–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –Ω–∞ 7 –¥–Ω—ñ–≤.\n"
            f"–î—ñ—î –¥–æ: {trial.expires_at:%Y-%m-%d %H:%M UTC}\n\n"
            "–ù–∞—Ç–∏—Å–Ω–∏ /myvpn, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—É—Å –∞–±–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó.\n"
            "–î–ª—è –∫—É–ø—ñ–≤–ª—ñ –ø—ñ–¥–ø–∏—Å–∫–∏: /buy"
        )
        await update.message.reply_text(text)

        # (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ) –æ–¥—Ä–∞–∑—É –≤–∏–¥–∞—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥ / QR
        # cfg_text, qr_image_bytes = await ensure_peer_for_user(user_id=user.id)
        # await context.bot.send_document(chat_id=chat.id, filename="svpn.conf", document=cfg_text.encode())
        # await context.bot.send_photo(chat_id=chat.id, photo=qr_image_bytes)

    else:
        msg = "‚úÖ –î–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–Ω–∏–π –¥–æ: {:%Y-%m-%d %H:%M UTC}".format(expires_at) if active else "‚õîÔ∏è –î–æ—Å—Ç—É–ø –Ω–µ –∞–∫—Ç–∏–≤–Ω–∏–π."
        await update.message.reply_text(msg + "\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞—Ç–∏—Å–Ω–∏ /buy –∞–±–æ –¥–∏–≤–∏—Å—å —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó /howto.")


async def cmd_buy(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ó–∞–≥–æ—Ç–æ–≤–∫–∞ –ø—ñ–¥ –ø–æ–∫—É–ø–∫—É:
    - –ü—ñ–∑–Ω—ñ—à–µ –¥–æ–¥–∞–º–æ Telegram Stars —ñ–Ω–≤–æ–π—Å —ñ –≤–∏–±—ñ—Ä —Å–ø–æ—Å–æ–±—É –æ–ø–ª–∞—Ç–∏.
    """
    text = (
        "üõí –û–±–µ—Ä—ñ—Ç—å –ø—ñ–¥–ø–∏—Å–∫—É:\n"
        "‚Ä¢ 1 –º—ñ—Å—è—Ü—å\n"
        "‚Ä¢ 3 –º—ñ—Å—è—Ü—ñ\n"
        "‚Ä¢ 6 –º—ñ—Å—è—Ü—ñ–≤\n\n"
        "–°–ø–æ—Å–æ–±–∏ –æ–ø–ª–∞—Ç–∏: Telegram Stars –∞–±–æ crypto (USDT/TON/USDC).\n"
        "–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –æ–ø–ª–∞—Ç–∏ –¥–æ–¥–∞–º–æ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –∫—Ä–æ—Ü—ñ."
    )
    await update.message.reply_text(text)


async def cmd_howto(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ö–æ—Ä–æ—Ç–∫–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è (–º–æ–∂–Ω–∞ –¥–æ–ø–æ–≤–Ω–∏—Ç–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏/–ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏).
    """
    text = (
        "üìò –Ø–∫ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—å –¥–æ SVPN (WireGuard):\n\n"
        "1) –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å WireGuard:\n"
        "   ‚Ä¢ iOS/Android ‚Äî –∑ App Store / Google Play\n"
        "   ‚Ä¢ Windows/Mac/Linux ‚Äî –∑ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ —Å–∞–π—Ç—É WireGuard\n\n"
        "2) –û—Ç—Ä–∏–º–∞–π—Ç–µ —Å–≤—ñ–π –∫–æ–Ω—Ñ—ñ–≥ —É –±–æ—Ç—ñ (QR –∞–±–æ .conf) ‚Äî –∫–æ–º–∞–Ω–¥–∞ /myvpn.\n"
        "3) –Ü–º–ø–æ—Ä—Ç—É–π—Ç–µ –∫–æ–Ω—Ñ—ñ–≥ —É –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫ WireGuard —Ç–∞ —É–≤—ñ–º–∫–Ω—ñ—Ç—å —Ç—É–Ω–µ–ª—å.\n\n"
        "–ü–∏—Ç–∞–Ω–Ω—è? –ü–∏—à—ñ—Ç—å —É –ø—ñ–¥—Ç—Ä–∏–º–∫—É."
    )
    await update.message.reply_text(text)


# -----------------------
# –ü–æ–±—É–¥–æ–≤–∞ Application
# -----------------------
def build_app(token: str) -> Application:
    app = Application.builder().token(token).build()

    # –•–µ–Ω–¥–ª–µ—Ä–∏
    app.add_handler(CommandHandler("start", cmd_start))
    app.add_handler(CommandHandler("myvpn", cmd_myvpn))
    app.add_handler(CommandHandler("buy", cmd_buy))
    app.add_handler(CommandHandler("howto", cmd_howto))

    return app


def main():
    token = os.environ["TELEGRAM_TOKEN"]
    log.info("Starting bot‚Ä¶")
    app = build_app(token)

    # PTB v21: run_polling –±–ª–æ–∫—É—î –ø–æ—Ç—ñ–∫, —Å–∞–º –ø—ñ–¥–Ω—ñ–º–∞—î asyncio-loop
    app.run_polling(
        allowed_updates=None,   # —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –Ω–∞–±—ñ—Ä –∞–ø–¥–µ–π—Ç—ñ–≤
        stop_signals=None       # systemd/kill -15 –∫–æ—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å
    )


if __name__ == "__main__":
    main()
