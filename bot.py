# bot.py
import asyncio
import logging
import os
from datetime import datetime, timezone

from aiogram import Bot, Dispatcher, Router, types
from aiogram.filters import Command
from aiogram.types import BotCommand
from dotenv import load_dotenv

from db.repo import get_or_create_user, grant_trial_if_needed, is_active
from howto import howto_router  # üëà –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ä–æ—É—Ç–µ—Ä /howto

logging.basicConfig(level=logging.INFO)

# --- env ----------------------------------------------------------------------
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TELEGRAM_TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∏–π —É .env")

# --- bot/dispatcher/router ----------------------------------------------------
bot = Bot(token=TELEGRAM_TOKEN, parse_mode="HTML")
dp = Dispatcher()

# –ì–æ–ª–æ–≤–Ω–∏–π —Ä–æ—É—Ç–µ—Ä –ø—Ä–æ—î–∫—Ç—É
router = Router(name="root")
# –ü—ñ–¥‚Äô—î–¥–Ω—É—î–º–æ /howto
router.include_router(howto_router)

# --- —ñ—Å–Ω—É—é—á—ñ –∫–æ–º–∞–Ω–¥–∏ ----------------------------------------------------------
@router.message(Command("start"))
async def cmd_start(message: types.Message):
    user = await get_or_create_user(telegram_id=message.from_user.id,
                                    username=message.from_user.username)
    # –í–∏–¥–∞—Ç–∏ trial, —è–∫—â–æ —â–µ –Ω–µ –±—É–ª–æ
    granted = await grant_trial_if_needed(user_id=user.id)
    if granted:
        await message.answer(
            "üëã –í—ñ—Ç–∞—é! –°—Ç–≤–æ—Ä–∏–≤ —Ç–≤—ñ–π –∞–∫–∞—É–Ω—Ç —ñ –∞–∫—Ç–∏–≤—É–≤–∞–≤ <b>7 –¥–Ω—ñ–≤ trial</b>.\n\n"
            "‚Ä¢ –°—Ç–∞—Ç—É—Å –ø—ñ–¥–ø–∏—Å–∫–∏: /status\n"
            "‚Ä¢ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: /howto\n"
            "‚Ä¢ –ö–æ–Ω—Ñ—ñ–≥ —ñ QR (—Å–∫–æ—Ä–æ): /myvpn"
        )
    else:
        await message.answer(
            "üëã –í—ñ—Ç–∞—é –∑ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º!\n"
            "‚Ä¢ –°—Ç–∞—Ç—É—Å –ø—ñ–¥–ø–∏—Å–∫–∏: /status\n"
            "‚Ä¢ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: /howto\n"
            "‚Ä¢ –ö–æ–Ω—Ñ—ñ–≥ —ñ QR (—Å–∫–æ—Ä–æ): /myvpn"
        )

@router.message(Command("status"))
async def cmd_status(message: types.Message):
    active, sub = await is_active(telegram_id=message.from_user.id)
    if not sub:
        await message.answer("–£ —Ç–µ–±–µ –ø–æ–∫–∏ –Ω–µ–º–∞—î –ø—ñ–¥–ø–∏—Å–æ–∫. –ù–∞–¥—ñ—à–ª–∏ /start, —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç.")
        return

    now = datetime.now(timezone.utc)
    left = (sub.expires_at - now).days if sub.expires_at else None
    trial_mark = " (trial)" if getattr(sub, "is_trial", False) else ""

    if active:
        await message.answer(
            f"‚úÖ –ü—ñ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞{trial_mark}\n"
            f"–î—ñ—î –¥–æ: <b>{sub.expires_at:%Y-%m-%d %H:%M UTC}</b>\n"
            f"–ó–∞–ª–∏—à–∏–ª–æ—Å—å: <b>{left} –¥–Ω.</b>"
        )
    else:
        await message.answer(
            f"‚õî –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞{trial_mark}\n"
            f"–ó–∞–∫—ñ–Ω—á–∏–ª–∞—Å—å: <b>{sub.expires_at:%Y-%m-%d %H:%M UTC}</b>\n"
            f"–û–Ω–æ–≤–∏ –ø—ñ–¥–ø–∏—Å–∫—É, —ñ —è –ø—Ä–æ–¥–æ–≤–∂—É –¥–æ—Å—Ç—É–ø."
        )

@router.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer(
        "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
        "/start ‚Äî —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ trial (1 —Ä–∞–∑)\n"
        "/status ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞–Ω –ø—ñ–¥–ø–∏—Å–∫–∏\n"
        "/howto ‚Äî —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è WireGuard\n"
        "/myvpn ‚Äî (—Å–∫–æ—Ä–æ) –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥ —ñ QR"
    )

# --- —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥ —É –º–µ–Ω—é –∫–ª—ñ—î–Ω—Ç–∞ ----------------------------------------
async def setup_bot_commands(b: Bot):
    await b.set_my_commands([
        BotCommand(command="start", description="–°—Ç–∞—Ä—Ç —ñ trial"),
        BotCommand(command="status", description="–°—Ç–∞—Ç—É—Å –ø—ñ–¥–ø–∏—Å–∫–∏"),
        BotCommand(command="howto", description="–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è"),
        BotCommand(command="help", description="–î–æ–ø–æ–º–æ–≥–∞"),
    ])

# --- –∑–∞–ø—É—Å–∫ -------------------------------------------------------------------
async def main():
    # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤–∏–π —Ä–æ—É—Ç–µ—Ä —É –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    dp.include_router(router)
    await setup_bot_commands(bot)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
