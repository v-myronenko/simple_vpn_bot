from __future__ import annotations

from telegram import Update
from telegram.ext import ContextTypes

from db.session_async import get_session
from db.repo import get_or_create_user, grant_trial_if_needed, is_active

# –Ø–∫—â–æ –º–∞—î—à –≥–æ—Ç–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤–∏–¥–∞—á—ñ –∫–æ–Ω—Ñ—ñ–≥–∞ ‚Äî —Ä–æ–∑–∫–æ–º–µ–Ω—Ç—É–π:
# from services.wg_manager import ensure_peer_for_user, get_client_config_bytes, get_client_qr_bytes


def _status_text(active: bool, expires_at) -> str:
    if not expires_at:
        return (
            "‚õîÔ∏è –î–æ—Å—Ç—É–ø –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π.\n"
            "–ù–∞—Ç–∏—Å–Ω–∏ /buy, —â–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É, –∞–±–æ /myvpn –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Å—Ç–∞—Ç—É—Å—É."
        )
    if active:
        return f"‚úÖ –î–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–Ω–∏–π –¥–æ: {expires_at:%Y-%m-%d %H:%M UTC}"
    return f"‚õîÔ∏è –î–æ—Å—Ç—É–ø –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π. –û—Å—Ç–∞–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∞ –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—å: {expires_at:%Y-%m-%d %H:%M UTC}"


async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /start:
    - —Å—Ç–≤–æ—Ä—é—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—è–∫—â–æ –≤–ø–µ—Ä—à–µ),
    - –Ω–∞–¥–∞—î trial 7 –¥–Ω—ñ–≤, —è–∫—â–æ –ø—ñ–¥–ø–∏—Å–æ–∫ —Ä–∞–Ω—ñ—à–µ –Ω–µ –±—É–ª–æ,
    - –ø–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç—É—Å —ñ –¥–∞—Ç—É –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è,
    - (–æ–ø—Ü—ñ–π–Ω–æ) –æ–¥—Ä–∞–∑—É –≤–∏–¥–∞—î WireGuard-–∫–æ–Ω—Ñ—ñ–≥/QR.
    """
    tg = update.effective_user
    chat = update.effective_chat
    if not tg or not chat:
        return

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è/–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ + trial –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É —Å—Ç–∞—Ä—Ç—ñ
    async with await get_session() as session:
        user = await get_or_create_user(session, telegram_id=tg.id, username=tg.username)
        trial = await grant_trial_if_needed(session, user.id, days=7)
        await session.commit()

        active, expires_at = await is_active(session, user.id)

    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
    if trial:
        text = (
            "üéâ –í—ñ—Ç–∞—é! –¢–≤—ñ–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –Ω–∞ 7 –¥–Ω—ñ–≤.\n"
            f"–î—ñ—î –¥–æ: {trial.expires_at:%Y-%m-%d %H:%M UTC}\n\n"
            "–ö–æ–º–∞–Ω–¥–∏:\n"
            "‚Ä¢ /myvpn ‚Äî —Å—Ç–∞—Ç—É—Å —ñ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥–∞\n"
            "‚Ä¢ /buy ‚Äî –∫—É–ø–∏—Ç–∏ 1 / 3 / 6 –º—ñ—Å. (Stars / crypto)\n"
            "‚Ä¢ /howto ‚Äî —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è WireGuard"
        )
        await update.message.reply_text(text)

        # (–æ–ø—Ü—ñ–π–Ω–æ) –æ–¥—Ä–∞–∑—É –≤–∏–¥–∞—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥/QR
        # try:
        #     await ensure_peer_for_user(user_id=user.id)  # —Å—Ç–≤–æ—Ä—é—î peer, —è–∫—â–æ –Ω–µ–º–∞
        #     cfg_bytes = await get_client_config_bytes(user_id=user.id)
        #     qr_bytes = await get_client_qr_bytes(user_id=user.id)
        #     await context.bot.send_document(chat_id=chat.id, filename="svpn.conf", document=cfg_bytes)
        #     await context.bot.send_photo(chat_id=chat.id, photo=qr_bytes)
        # except Exception as e:
        #     await update.message.reply_text(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—å –≤–∏–¥–∞—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ: {e}\n–°–ø—Ä–æ–±—É–π /myvpn.")

    else:
        await update.message.reply_text(_status_text(active, expires_at) + "\n\n–ö–æ–º–∞–Ω–¥–∏: /myvpn, /buy, /howto")
