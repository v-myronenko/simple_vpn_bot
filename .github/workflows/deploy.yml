name: Deploy VPN Bot

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_USER: ${{ secrets.SERVER_USER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_ed25519
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "$SERVER_HOST" >> ~/.ssh/known_hosts

      - name: Rsync project to server
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes "$SERVER_USER@$SERVER_HOST" "mkdir -p ~/apps/simple_vpn_bot"
          rsync -az --delete \
            --exclude '.git' --exclude '.github' \
            -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes" \
            ./ "$SERVER_USER@$SERVER_HOST:~/apps/simple_vpn_bot/"

      - name: Build .env locally
        run: |
          cat > .env <<EOF
          TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
          WG_INTERFACE=${{ vars.WG_INTERFACE }}
          WG_NETWORK=${{ vars.WG_NETWORK }}
          WG_ENDPOINT_HOST=${{ vars.WG_ENDPOINT_HOST }}
          WG_ENDPOINT_PORT=${{ vars.WG_ENDPOINT_PORT }}
          WG_DNS=${{ vars.WG_DNS }}
          WG_KEEPALIVE=${{ vars.WG_KEEPALIVE }}
          WG_MTU=${{ vars.WG_MTU }}
          EOF

      - name: Copy .env and move to /etc
        run: |
          scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes .env "$SERVER_USER@$SERVER_HOST:/home/$SERVER_USER/.env"
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes "$SERVER_USER@$SERVER_HOST" "bash -lc '
            echo \"${{ secrets.SUDO_PASSWORD }}\" | sudo -S install -d -m 755 /etc/vpn-bot
            echo \"${{ secrets.SUDO_PASSWORD }}\" | sudo -S mv /home/$USER/.env /etc/vpn-bot/.env
            echo \"${{ secrets.SUDO_PASSWORD }}\" | sudo -S chown root:root /etc/vpn-bot/.env
            echo \"${{ secrets.SUDO_PASSWORD }}\" | sudo -S chmod 600 /etc/vpn-bot/.env
          '"

      - name: Create venv & install deps
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes "$SERVER_USER@$SERVER_HOST" "bash -lc '
            cd ~/apps/simple_vpn_bot
            python3 -m venv .venv
            . .venv/bin/activate
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          '"

      - name: Restart service
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes "$SERVER_USER@$SERVER_HOST" "bash -lc '
            echo \"${{ secrets.SUDO_PASSWORD }}\" | sudo -S systemctl daemon-reload
            echo \"${{ secrets.SUDO_PASSWORD }}\" | sudo -S systemctl restart vpn-bot.service || \
            echo \"${{ secrets.SUDO_PASSWORD }}\" | sudo -S systemctl start vpn-bot.service
            systemctl is-active --quiet vpn-bot.service
          '"
