name: Deploy VPN Bot

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_DIR: /home/bot/apps/simple_vpn_bot

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          install -m 700 -d ~/.ssh
          install -m 600 -D /dev/null ~/.ssh/id_ed25519
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "${{ secrets.SERVER_HOST }}" >> ~/.ssh/known_hosts

      - name: Upload code to server (rsync)
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes \
            "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}" \
            "mkdir -p $APP_DIR"
          rsync -az --delete \
            --exclude ".git" --exclude ".github" --exclude ".venv" \
            --exclude "__pycache__" --exclude "*.pyc" --exclude ".env" \
            -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes" \
            ./ "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:$APP_DIR/"

      - name: Create/merge .env and data dir (remote)
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            set -Eeuo pipefail

            PW='${{ secrets.SUDO_PASSWORD }}'
            run() { printf '%s\n' "$PW" | sudo -S -p '' "$@"; }

            # Підхопимо поточні змінні з /etc/vpn-bot/.env (якщо файл вже є)
            if run test -f /etc/vpn-bot/.env; then
              set -a; run bash -lc 'source /etc/vpn-bot/.env' || true; set +a
            fi

            # Значення з GitHub Vars (якщо задані) матимуть пріоритет
            : "${WG_INTERFACE:=${{ vars.WG_INTERFACE }}}"
            : "${WG_NETWORK:=${{ vars.WG_NETWORK }}}"
            : "${WG_ENDPOINT_HOST:=${{ vars.WG_ENDPOINT_HOST }}}"
            : "${WG_ENDPOINT_PORT:=${{ vars.WG_ENDPOINT_PORT }}}"
            : "${WG_DNS:=${{ vars.WG_DNS }}}"
            : "${WG_KEEPALIVE:=${{ vars.WG_KEEPALIVE }}}"
            : "${WG_MTU:=${{ vars.WG_MTU }}}"

            # Дефолти, якщо щось порожнє
            : "${WG_INTERFACE:=wg0}"
            : "${WG_NETWORK:=10.8.0.0/24}"
            : "${WG_ENDPOINT_HOST:=142.93.238.250}"
            : "${WG_ENDPOINT_PORT:=51820}"
            : "${WG_DNS:=1.1.1.1,8.8.8.8}"
            : "${WG_KEEPALIVE:=25}"
            : "${WG_MTU:=1280}"

            # TELEGRAM_TOKEN беремо лише з секретів репозиторію
            TELEGRAM_TOKEN='${{ secrets.TELEGRAM_TOKEN }}'
            if [ -z "$TELEGRAM_TOKEN" ]; then
              echo "❌ TELEGRAM_TOKEN is empty"; exit 1
            fi

            # База
            run install -d -o bot -g bot /home/bot/data
            DATABASE_URL=${DATABASE_URL:-sqlite:////home/bot/data/vpn_users.db}

            # Збираємо новий .env у /tmp і атомарно кладемо в /etc
            run install -d -m 755 /etc/vpn-bot
            cat >/tmp/vpn-bot.env <<EOF
            TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
            WG_INTERFACE=${WG_INTERFACE}
            WG_NETWORK=${WG_NETWORK}
            WG_ENDPOINT_HOST=${WG_ENDPOINT_HOST}
            WG_ENDPOINT_PORT=${WG_ENDPOINT_PORT}
            WG_DNS=${WG_DNS}
            WG_KEEPALIVE=${WG_KEEPALIVE}
            WG_MTU=${WG_MTU}
            DATABASE_URL=${DATABASE_URL}
            EOF
            run install -o root -g root -m 600 /tmp/vpn-bot.env /etc/vpn-bot/.env
            rm -f /tmp/vpn-bot.env

            echo "== /etc/vpn-bot/.env =="
            run bash -lc "sed -n '1,120p' /etc/vpn-bot/.env | sed 's/TELEGRAM_TOKEN=.*/TELEGRAM_TOKEN=***hidden***/'"

      - name: Install deps in venv (remote)
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -Eeuo pipefail
            cd "$APP_DIR"
            python3 -m venv .venv >/dev/null 2>&1 || true
            . .venv/bin/activate
            python -m pip install --upgrade pip wheel
            [ -f requirements.txt ] && pip install -r requirements.txt || true

      # Якщо unit вже встановлений — цей крок можна пропустити. Лишаю як «на всяк».
      # Він не потребує редагування, якщо ти вже маєш робочий unit.
      - name: Restart and healthcheck (remote)
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -Eeuo pipefail
            PW='${{ secrets.SUDO_PASSWORD }}'
            run() { printf '%s\n' "$PW" | sudo -S -p '' "$@"; }

            run systemctl daemon-reload
            run systemctl restart vpn-bot.service || run systemctl start vpn-bot.service
            sleep 2
            systemctl --no-pager -l status vpn-bot.service | sed -n '1,120p'
            echo
            echo "== tail logs =="
            journalctl -u vpn-bot.service -n 60 --no-pager || true

            echo
            echo "== Telegram getMe =="
            TOKEN=$(run bash -lc "grep -oP '^TELEGRAM_TOKEN=\\K.*' /etc/vpn-bot/.env")
            curl -fsS "https://api.telegram.org/bot${TOKEN}/getMe" | sed 's/\"id\":[0-9]\+/\"id\":…/' || true
