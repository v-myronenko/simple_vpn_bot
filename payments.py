# payments.py
from aiogram import Bot, Router, F, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.exceptions import TelegramBadRequest

from db.repo import get_or_create_user, extend_subscription

payments_router = Router(name="payments")

STARS_PRICE = 500  # amount in smallest units of XTR

async def buy_kb(bot: Bot) -> InlineKeyboardMarkup:
    stars_link = await bot.create_invoice_link(
        title="VPN subscription",
        description="–ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ 31 –¥–µ–Ω—å",
        payload="sub_31",
        currency="XTR",
        prices=[types.LabeledPrice(label="31 days", amount=STARS_PRICE)],
    )
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç–∏ Stars", url=stars_link)],
        [InlineKeyboardButton(text="üí† Crypto (USDT)", callback_data="buy:usdt")],
        [InlineKeyboardButton(text="üí≥ Card (Stripe/LiqPay)", callback_data="buy:card")],
    ])

MENU_TEXT = (
    "üí≥ <b>–û–ø–ª–∞—Ç–∞ / –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏</b>\n\n"
    "–û–±–µ—Ä–∏ —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏. –ü—ñ—Å–ª—è —É—Å–ø—ñ—Ö—É ‚Äî –ø—ñ–¥–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–¥–æ–≤–∂–∏—Ç—å—Å—è –Ω–∞ 31 –¥–µ–Ω—å.\n"
    "–ü–æ—á–Ω–µ–º–æ –∑ Telegram Stars —ñ USDT (—è–∫ MVP)."
)

@payments_router.message(Command("buy"))
async def cmd_buy(message: types.Message, bot: Bot):
    await message.answer(MENU_TEXT, reply_markup=await buy_kb(bot))

@payments_router.callback_query(F.data.startswith("buy:"))
async def cb_buy(call: types.CallbackQuery, bot: Bot):
    action = call.data.split(":")[1]

    if action == "usdt":
        text = (
            "üí† <b>USDT (MVP)</b>\n\n"
            "–ù–∞–¥—ñ—à–ª–∏ TXID —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.\n"
            "–ü—ñ—Å–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è ‚Äî –ø—Ä–æ–¥–æ–≤–∂–∏–º–æ –¥–æ—Å—Ç—É–ø –Ω–∞ 31 –¥–µ–Ω—å.\n"
            "–î–∞–ª—ñ –¥–æ–¥–∞–º–æ –∞–≤—Ç–æ–ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫."
        )
    elif action == "card":
        text = (
            "üí≥ <b>–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–∫–æ—é</b>\n\n"
            "–ü—ñ–¥–∫–ª—é—á–∏–º–æ Stripe/LiqPay –ø—ñ—Å–ª—è Stars/USDT. –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç–∏ –∑‚Äô—è–≤–∏—Ç—å—Å—è —Ç—É—Ç."
        )
    else:
        await call.answer("–ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è", show_alert=True)
        return

    try:
        await call.message.edit_text(
            text, reply_markup=await buy_kb(bot), disable_web_page_preview=True
        )
    except TelegramBadRequest:
        pass
    await call.answer()


@payments_router.message(F.successful_payment)
async def successful_payment(message: types.Message):
    user = await get_or_create_user(message.from_user.id, message.from_user.username)
    await extend_subscription(user.id, days=31)
    await message.answer(
        "–î—è–∫—É—î–º–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –ü—ñ–¥–ø–∏—Å–∫–∞ –ø–æ–¥–æ–≤–∂–µ–Ω–∞ –Ω–∞ 31 –¥–µ–Ω—å."
    )