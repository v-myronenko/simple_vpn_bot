# howto.py
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.exceptions import TelegramBadRequest

howto_router = Router(name="howto")

INTRO = (
    "üõ†Ô∏è <b>–Ø–∫ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—å –¥–æ VPN (WireGuard)</b>\n\n"
    "–û–±–µ—Ä–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –Ω–∏–∂—á–µ: –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞—Å—Ç–æ—Å—É–Ω–∫–∞, —ñ–º–ø–æ—Ä—Ç .conf –∞–±–æ QR, –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è.\n\n"
    "–ü–æ—Ä–∞–¥–∞: –∑–≥–µ–Ω–µ—Ä—É–π –∫–æ–Ω—Ñ—ñ–≥ —É –±–æ—Ç—ñ –∫–æ–º–∞–Ω–¥–æ—é <code>/myvpn</code> ‚Äî –æ—Ç—Ä–∏–º–∞—î—à —Ñ–∞–π–ª —ñ QR."
)

PLATFORMS = [
    ("Android", "android"),
    ("iOS / iPadOS", "ios"),
    ("Windows", "windows"),
    ("macOS", "macos"),
    ("Linux", "linux"),
]

HOWTO = {
    "android": (
        "üì± <b>Android ‚Äî WireGuard</b>\n\n"
        "1) –í—Å—Ç–∞–Ω–æ–≤–∏ <b>WireGuard</b> –∑ Google Play.\n"
        "2) –£ –±–æ—Ç—ñ –≤–∏–∫–æ–Ω–∞–π <code>/myvpn</code> —ñ –æ—Ç—Ä–∏–º–∞–π .conf + QR.\n"
        "3) –£ WireGuard: + ‚Üí <b>Scan from QR code</b> –∞–±–æ <b>Import from file</b>.\n"
        "4) –£–≤—ñ–º–∫–Ω–∏ –ø—Ä–æ—Ñ—ñ–ª—å (–¥–æ–∑–≤—ñ–ª –Ω–∞ VPN).\n"
        "5) –ü–µ—Ä–µ–≤—ñ—Ä IP: https://ipinfo.io\n\n"
        "–Ø–∫—â–æ –Ω–µ –∫–æ–Ω–µ–∫—Ç–∏—Ç—å—Å—è: —á–∞—Å/–¥–∞—Ç–∞, –µ–Ω–µ—Ä–≥–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è, —ñ–Ω—à–∞ –º–µ—Ä–µ–∂–∞ (–º–æ–±—ñ–ª—å–Ω–∏–π —ñ–Ω–µ—Ç/—ñ–Ω—à–∏–π Wi-Fi)."
    ),
    "ios": (
        "üçé <b>iOS / iPadOS ‚Äî WireGuard</b>\n\n"
        "1) –í—Å—Ç–∞–Ω–æ–≤–∏ <b>WireGuard</b> –∑ App Store.\n"
        "2) –û—Ç—Ä–∏–º–∞–π –∫–æ–Ω—Ñ—ñ–≥ —á–µ—Ä–µ–∑ <code>/myvpn</code>.\n"
        "3) <b>Scan QR Code</b> –∞–±–æ —ñ–º–ø–æ—Ä—Ç .conf —ñ–∑ ¬´–§–∞–π–ª—ñ–≤¬ª.\n"
        "4) –£–≤—ñ–º–∫–Ω–∏ —Ç—É–Ω–µ–ª—å (–ø—ñ–¥—Ç–≤–µ—Ä–¥–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è VPN-–ø—Ä–æ—Ñ—ñ–ª—é).\n"
        "5) –ü–µ—Ä–µ–≤—ñ—Ä IP: https://ipinfo.io\n\n"
        "–ü—Ä–æ–±–ª–µ–º–∏: –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ —Ç—É–Ω–µ–ª—å, –ø–µ—Ä–µ–≤—ñ—Ä –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ ‚Üí VPN ‚Üí –¥–æ–∑–≤–æ–ª–∏ –¥–ª—è WireGuard."
    ),
    "windows": (
        "ü™ü <b>Windows ‚Äî WireGuard</b>\n\n"
        "1) –ó–∞–≤–∞–Ω—Ç–∞–∂ –∑ https://www.wireguard.com/install/ (Windows) —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–∏.\n"
        "2) –ó–±–µ—Ä–µ–∂–∏ .conf —ñ–∑ <code>/myvpn</code> –Ω–∞ –ü–ö.\n"
        "3) WireGuard ‚Üí <b>Import tunnel(s) from file</b> ‚Üí –æ–±–µ—Ä–∏ .conf.\n"
        "4) –ù–∞—Ç–∏—Å–Ω–∏ <b>Activate</b>.\n"
        "5) –ü–µ—Ä–µ–≤—ñ—Ä IP: https://ipinfo.io\n\n"
        "–ù–µ –∫–æ–Ω–µ–∫—Ç–∏—Ç—å—Å—è: —á–∞—Å/–¥–∞—Ç–∞, —Ñ–∞—î—Ä–≤–æ–ª/–∞–Ω—Ç–∏–≤—ñ—Ä—É—Å (–¥–æ–∑–≤–æ–ª—å WireGuard), —Å–ø—Ä–æ–±—É–π —ñ–Ω—à—É –º–µ—Ä–µ–∂—É."
    ),
    "macos": (
        "üñ•Ô∏è <b>macOS ‚Äî WireGuard</b>\n\n"
        "1) –í—Å—Ç–∞–Ω–æ–≤–∏ –∑ App Store –∞–±–æ –æ—Ñ—Å–∞–π—Ç—É.\n"
        "2) –Ü–º–ø–æ—Ä—Ç—É–π .conf / QR –∑ <code>/myvpn</code>.\n"
        "3) –£–≤—ñ–º–∫–Ω–∏ —Ç—É–Ω–µ–ª—å (–º–æ–∂–µ –ø–æ–ø—Ä–æ—Å–∏—Ç–∏ –ø–∞—Ä–æ–ª—å/Touch ID).\n"
        "4) –ü–µ—Ä–µ–≤—ñ—Ä IP: https://ipinfo.io\n\n"
        "–ü—ñ—Å–ª—è —Å–Ω—É –Ω–µ–º–∞—î —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É? –í–∏–º–∫/—É–≤—ñ–º–∫–Ω–∏ —Ç—É–Ω–µ–ª—å."
    ),
    "linux": (
        "üêß <b>Linux ‚Äî WireGuard</b>\n\n"
        "A) GUI (NetworkManager): –Ü–º–ø–æ—Ä—Ç—É–π .conf —É ¬´–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ—Ä–µ–∂—ñ¬ª ‚Üí VPN.\n"
        "B) CLI (wg-quick):\n"
        "   1) –í—Å—Ç–∞–Ω–æ–≤–∏ wireguard-tools.\n"
        "   2) /etc/wireguard/myvpn.conf (–ø—Ä–∞–≤–∞ 600).\n"
        "   3) –ó–∞–ø—É—Å–∫: <code>sudo wg-quick up myvpn</code>\n"
        "      –°—Ç–æ–ø:   <code>sudo wg-quick down myvpn</code>\n"
        "   4) –ü–µ—Ä–µ–≤—ñ—Ä: <code>curl https://ipinfo.io/ip</code>\n\n"
        "–ù–µ–º–∞—î –º–∞—Ä—à—Ä—É—Ç—É? <code>AllowedIPs = 0.0.0.0/0, ::/0</code> —ñ –∫–æ—Ä–µ–∫—Ç–Ω–∏–π DNS (1.1.1.1)."
    ),
}

def menu_kb() -> InlineKeyboardMarkup:
    rows = [[InlineKeyboardButton(text=title, callback_data=f"howto:platform:{slug}")]
            for title, slug in PLATFORMS]
    return InlineKeyboardMarkup(inline_keyboard=rows)

def back_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é", callback_data="howto:menu")
    ]])

@howto_router.message(Command("howto"))
async def cmd_howto(message: types.Message):
    await message.answer(INTRO, reply_markup=menu_kb())

@howto_router.callback_query(F.data == "howto:menu")
async def cb_menu(call: types.CallbackQuery):
    try:
        await call.message.edit_text(INTRO, reply_markup=menu_kb(), disable_web_page_preview=True)
    except TelegramBadRequest:
        pass
    await call.answer()

@howto_router.callback_query(F.data.startswith("howto:platform:"))
async def cb_platform(call: types.CallbackQuery):
    slug = call.data.split(":")[-1]
    text = HOWTO.get(slug)
    if not text:
        await call.answer("–ù–µ–≤—ñ–¥–æ–º–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞", show_alert=True)
        return
    await call.message.edit_text(text, reply_markup=back_kb(), disable_web_page_preview=True)
    await call.answer()
